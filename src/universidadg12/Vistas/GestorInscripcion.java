/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package universidadg12.Vistas;

import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import universidadg12.Model.Alumno;
import universidadg12.Model.Inscripcion;
import universidadg12.Model.Materia;
import universidadg12.Persistencia.AlumnoData;
import universidadg12.Persistencia.InscripcionData;
import universidadg12.Persistencia.MateriaData;

/**
 *
 * @author patri
 */
public class GestorInscripcion extends javax.swing.JInternalFrame {

    /**
     * Creates new form GestorInscripcion
     */
    public GestorInscripcion() {
        initComponents();
        cargarCombo();
        cargarComboMat();
        CargarTablaInicio();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ComboAlumno = new javax.swing.JComboBox<>();
        ComboMat = new javax.swing.JComboBox<>();
        btnInscribir = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaInscripcion = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        jLabel1.setText("Formulario De Inscripcion");

        jLabel2.setText("Alumno");

        jLabel3.setText("Materia");

        btnInscribir.setText("Inscribir");
        btnInscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInscribirActionPerformed(evt);
            }
        });

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        tablaInscripcion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Alumno", "Materia", "Nota"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaInscripcion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaInscripcionMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaInscripcion);

        jLabel4.setText("Al Inscribir vera el alumno y las materias en las que esta Inscripto");

        jButton1.setText("Cancelar Inscripcion");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(189, 189, 189)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(43, 43, 43)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(ComboAlumno, 0, 152, Short.MAX_VALUE)
                                    .addComponent(ComboMat, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(btnInscribir)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jLabel4)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 27, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSalir)
                .addGap(36, 36, 36))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(ComboAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(ComboMat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(btnInscribir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalir)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInscribirActionPerformed
        InscripcionData inscripcionData= new InscripcionData();
        Alumno alumno= (Alumno) ComboAlumno.getSelectedItem();
        Materia materia=(Materia) ComboMat.getSelectedItem();
       
        Inscripcion Inscripcion= new Inscripcion(alumno,materia);
        
        inscripcionData.guardarInscripcion(Inscripcion);
        CargarTabla();
    }//GEN-LAST:event_btnInscribirActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
       dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
     
      InscripcionData inscripcionData= new InscripcionData();
      MateriaData materiaData= new MateriaData();
      AlumnoData alumnoData= new AlumnoData();
       Alumno alumno= (Alumno) ComboAlumno.getSelectedItem();
        Materia materia=(Materia) ComboMat.getSelectedItem();
        inscripcionData.borrarInscripcion(alumno.getId_alumno(), materia.getId_materia());
     
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tablaInscripcionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaInscripcionMouseClicked
      
    }//GEN-LAST:event_tablaInscripcionMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Alumno> ComboAlumno;
    private javax.swing.JComboBox<Materia> ComboMat;
    private javax.swing.JButton btnInscribir;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaInscripcion;
    // End of variables declaration//GEN-END:variables

public void cargarCombo(){
    AlumnoData alumnoData= new AlumnoData();
    ArrayList<Alumno> listadoAlumnos = alumnoData.listarAlumnos();
    for(Alumno aux: listadoAlumnos){
        ComboAlumno.addItem(aux);
    }
 
}
public void cargarComboMat(){
    MateriaData materiaData= new MateriaData();
   
    ArrayList<Materia> listadoMateria = materiaData.mostrarMaterias();
    for(Materia aux: listadoMateria){
        ComboMat.addItem(aux);
    }
    
}
public void CargarTabla(){
    DefaultTableModel modelo= (DefaultTableModel)tablaInscripcion.getModel();
    modelo.setRowCount(0);
    AlumnoData alumnoData = new AlumnoData();
     InscripcionData inscripcionData= new InscripcionData();
     
    Alumno alumnoCombo=  (Alumno)ComboAlumno.getSelectedItem();
    Alumno alumno= alumnoData.buscarAlumnos(alumnoCombo.getDni());
    
   ArrayList<Inscripcion> listado= (ArrayList)inscripcionData.obtenerInscripcionesPorAlumno(alumno.getId_alumno());
   for (Inscripcion aux : listado){
       
       String[] fila={
           aux.getAlumno().toString(),
           aux.getMateria().toString(),
           String.valueOf(aux.getNota())
               
       } ;
       modelo.addRow(fila);
   }
   
  
}
    public void CargarTablaInicio(){
    DefaultTableModel modelo= (DefaultTableModel)tablaInscripcion.getModel();
    modelo.setRowCount(0);
    AlumnoData alumnoData = new AlumnoData();
     InscripcionData inscripcionData= new InscripcionData();
     
    
    
   ArrayList<Inscripcion> listado= (ArrayList)inscripcionData.obtenerInscripciones();
   for (Inscripcion aux : listado){
       
       String[] fila={
           aux.getAlumno().toString(),
           aux.getMateria().toString(),
           String.valueOf(aux.getNota())
               
       } ;
       modelo.addRow(fila);
   }
   
  
}
}

